@page 
@model IndexModel

<html>

<head>
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <script src="https://unpkg.com/vue-router/dist/vue-router.js"></script>
    <script src="/js/signalr.min.js"></script>
    <link rel="stylesheet" href="/css/site.css" />
</head>

<body>
    <div id="app">
        <h1>Ultimate Tic Tac Toe</h1>

        Hello @Model.UserName 

        <h2>Games</h2>
        <ol>
            <li v-for="game in games">
                {{ game.player1 }} ({{ game.status }})
                <a href="#" v-on:click="select(game)" v-if="game.status == 1">Select</a>
                <a href="#" v-on:click="joinGame(game.id)" v-if="game.status == 0 && game.player1 != '@Model.UserName'">Join</a>
            </li>
        </ol>
        <a href="#" v-on:click="startGame">Start new game</a>

        <div v-if="game">
            <h2>Game</h2>
            <div id="currentGame">
                <table border="1">
                    <tbody>
                        <tr v-for="(row, outerRowIndex) in game2.board.cells">
                            <td v-for="(game, outerColIndex) in row">
                                <table border="1">
                                    <tbody>
                                        <tr v-for="(gameRow, innerRowIndex) in game">
                                            <td v-for="(cell, innerColIndex) in gameRow" v-on:click="playCell(outerRowIndex, outerColIndex, innerRowIndex, innerColIndex)">
                                                <div v-if="cell == '0'">-</div>
                                                <div v-if="cell == '1'">1</div>
                                                <div v-if="cell == '2'">2</div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <h2>Chat</h2>

        <div id="chat-area">
            <ul id="messages">
                <li v-for="message in messages">{{ message.from }}: {{ message.text }}</li>
            </ul>
            <ul id="users">
                <li>
                    <b>Users online</b>
                </li>
                <li v-for="user in users">{{ user }}</li>
            </ul>
            <div class="clear">
            </div>
            <form action="#" v-on:submit.prevent="addChatMessage">
                <input type="text" id="new-message" v-model="message" />
                <input type="submit" id="send" value="Send" class="send" />
            </form>
        </div>
    </div>


    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl('/utt')
            .configureLogging(signalR.LogLevel.Trace)
            .build();

        var app = new Vue({
            el: '#app',
            data: {
                name: '@Model.UserName',
                games: [],
                game: null,
                game2: {
                    board: {
                        cells: [
                            [[[0, 1, 2], [0, 1, 0], [2, 0, 0]],
                            [[0, 1, 2], [0, 1, 0], [2, 0, 0]],
                            [[0, 1, 2], [0, 1, 0], [2, 0, 0]]],

                            [[[0, 1, 2], [0, 1, 0], [2, 0, 0]],
                            [[0, 1, 2], [0, 1, 0], [2, 0, 0]],
                            [[0, 1, 2], [0, 1, 0], [2, 0, 0]]],

                            [[[0, 1, 2], [0, 1, 0], [2, 0, 0]],
                            [[0, 1, 2], [0, 1, 0], [2, 0, 0]],
                            [[0, 1, 2], [0, 1, 0], [2, 0, 0]]]
                        ]
                    }
                },
                users: [],
                messages: [],
                message: ''
            },
            methods: {
                addChatMessage: function () {
                    connection.invoke('sendToLobby', this.message);
                    this.message = '';
                },
                startGame: function () {
                    connection.invoke('createGame');
                },
                select: function (game) {
                    this.game = game;
                    connection.invoke('selectGame', game.id);
                },
                joinGame: function (id) {
                    connection.invoke('joinGame', id);
                },
                playCell: function (outerRowIndex, outerColIndex, innerRowIndex, innerColIndex) {
                    connection.invoke('playTurn', this.game.id, outerRowIndex, outerColIndex, innerRowIndex, innerColIndex);
                    // Vue.set(gameRow, index, val == 0 ? 1 : (val == 1 ? 2 : 1));
                }
            }
        });

        connection.on('usersChanged', function (users) {
            app.users = users;
        });

        connection.on('lobbyMessage', function (from, message) {
            app.messages.push({ from: from, text: message });
        });

        connection.on('gameUpdated', function (games) {
            app.games = games;
        });

        connection.start();
    </script>
</body>

</html>